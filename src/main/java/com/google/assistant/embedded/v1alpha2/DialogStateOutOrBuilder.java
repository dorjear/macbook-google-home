// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha2;

public interface DialogStateOutOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.assistant.embedded.v1alpha2.DialogStateOut)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * *Output-only* Supplemental display text from the Assistant. This could be
   * the same as the speech spoken in `AssistResponse.audio_out` or it could
   * be some additional information which aids the user's understanding.
   * </pre>
   *
   * <code>string supplemental_display_text = 1;</code>
   */
  java.lang.String getSupplementalDisplayText();
  /**
   * <pre>
   * *Output-only* Supplemental display text from the Assistant. This could be
   * the same as the speech spoken in `AssistResponse.audio_out` or it could
   * be some additional information which aids the user's understanding.
   * </pre>
   *
   * <code>string supplemental_display_text = 1;</code>
   */
  com.google.protobuf.ByteString
      getSupplementalDisplayTextBytes();

  /**
   * <pre>
   * *Output-only* State information for the subsequent `Assist` RPC. This
   * value should be saved in the client and returned in the
   * [`DialogStateIn.conversation_state`](#dialogstatein) field with the next
   * `Assist` RPC. (The client does not need to interpret or otherwise use this
   * value.) This information should be saved across device reboots. However,
   * this value should be cleared (not saved in the client) during a
   * factory-default reset.
   * </pre>
   *
   * <code>bytes conversation_state = 2;</code>
   */
  com.google.protobuf.ByteString getConversationState();

  /**
   * <pre>
   * *Output-only* Specifies the mode of the microphone after this `Assist`
   * RPC is processed.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;</code>
   */
  int getMicrophoneModeValue();
  /**
   * <pre>
   * *Output-only* Specifies the mode of the microphone after this `Assist`
   * RPC is processed.
   * </pre>
   *
   * <code>.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode microphone_mode = 3;</code>
   */
  com.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode getMicrophoneMode();

  /**
   * <pre>
   * *Output-only* Updated volume level. The value will be 0 or omitted
   * (indicating no change) unless a voice command such as *Increase the volume*
   * or *Set volume level 4* was recognized, in which case the value will be
   * between 1 and 100 (corresponding to the new volume level of 1% to 100%).
   * Typically, a client should use this volume level when playing the
   * `audio_out` data, and retain this value as the current volume level and
   * supply it in the `AudioOutConfig` of the next `AssistRequest`. (Some
   * clients may also implement other ways to allow the current volume level to
   * be changed, for example, by providing a knob that the user can turn.)
   * </pre>
   *
   * <code>int32 volume_percentage = 4;</code>
   */
  int getVolumePercentage();
}
